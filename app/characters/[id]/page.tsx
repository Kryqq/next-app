import React from 'react';
import { HeadMeta } from '@/components/headMeta/HeadMeta';
import { CharacterType, ResponseType } from '@/assets/api/rick-and-morty-api';

import { PageWrapper } from '@/components/pageWrapper/PageWrapper';
import { Metadata } from 'next';
import CharacterCard from '@/components/card/characterCard/CharacterCard';

// export const getStaticPaths: GetStaticPaths = async () => {
//    const { results } = await API.rickAndMorty.getCharacters();

//    const paths = results.map((character) => ({
//       params: { id: character.id.toString() },
//    }));

//    return {
//       paths,
//       fallback: true,
//    };
// };
// export const getStaticProps: GetStaticProps = async ({ params }) => {
//    const { id } = params || {};

//    const character = await API.rickAndMorty.getCharacter(id as string);

//    if (!character) {
//       return {
//          notFound: true,
//       };
//    }

//    return {
//       props: {
//          character,
//       },
//    };
// };

// type Props = {
//    character: CharacterType;
// };
const getCharacters = async (): Promise<ResponseType<CharacterType>> => {
   const res = await fetch(`${process.env.NEXT_PUBLIC_RICK_API_URL}/character`, {
      cache: 'force-cache',
      next: { revalidate: 60 },
   });

   return res.json();
};

export async function generateStaticParams() {
   const { results } = await getCharacters();

   return results.map((character) => ({
      id: character.id.toString(),
   }));
}

export const generateMetadata = async ({ params }: { params: { id: string } }): Promise<Metadata> => ({
   title: params.id,
   description: 'Generated by create next app',
});

const Character = ({ params }: { params: { id: string } }) => {
   return (
      <>
         <HeadMeta title={'Character'} />

         <PageWrapper>
            <h1>{params.id}</h1>
         </PageWrapper>
      </>
   );
};

export default Character;
